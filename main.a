
.text

	# Word sizes. # Change if a word is not 32 bits, 4 bytes.
	.equ w1, 4

# External labels:
	.extern mem_init

        .extern link_init
        .extern link_new
        .extern link_stack_print
        .extern link_print
        .extern list_new
        .extern list_push

	.extern element_init
	.extern element_new
	.extern element_dealloc
	.extern element_print
	.extern element_list_print
	.extern element_stack_print
	.extern element_list_dealloc

_start:
    # Init alloc-only memory bank.
    jal mem_init

    # Init links struct alloc/dealloc stack-array memory.
    li a0, 3		# Load maximum number of items in use at any one time. 
    jal link_init

    # Init element struct alloc/dealloc stack-array memory.
    li a0, 3		# Load maximum number of items in use at any one time. 
    jal element_init

after_init:
    jal link_stack_print

    jal element_stack_print

    # Init new list, save to s1.
    jal list_new
    mv s1, a1

    # Make a new element instance.
    la a0, he_name
    li a1, 2
    jal element_new	# New element instance to a1.

    # Push to list.
    mv a0, s1		# Load list ptr.
    jal list_push

    # Make a new element instance.
    la a0, h_name
    li a1, 1
    jal element_new	# New element instance to a1.
    mv s2, a1		# Save ptr.

    # Push to list.
    mv a0, s1		# Load list ptr.
    jal list_push

    # Print list.
    la t0, cr
    sout t0
    mv a0, s1		# Load list ptr.
    la a1, sep1
    jal element_list_print
    la t0, cr
    sout t0

    mv a0, s1		# Load list ptr.
    jal element_list_dealloc

    jal link_stack_print

    jal element_stack_print

    halt

sep1: .asciz ", "
cr: .asciz "\n"
h_name: .asciz "Hydrogen"
he_name: .asciz "Helium"
